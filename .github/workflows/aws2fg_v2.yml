name: Push to AWS Fargate v2

on:
  push:
    branches:
      - dockerhub
      
env:
  ECS_TASK_DEFINITION: .aws/dh_taskdef.json
  CONTAINER_NAME: strapi-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.ADAMDOCKHERHUB_USERNAME }} 
        password: ${{ secrets.ADAMDOCKERHUB_PASSWORD }} 

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: adamsia/test-strapi:latest

    - name: Deploy to AWS Fargate using json
      env:
        AWS_REGION: us-east-1
        AWS_ACCESS_KEY_ID: ${{ secrets.ADAMAWSCLI_ID }} 
        AWS_SECRET_ACCESS_KEY: ${{ secrets.ADAMAWSCLI_KEY }}
        ECS_TASK_DEFINITION: .aws/dh_taskdef.json
        CONTAINER_NAME: strapi-app
        
      run: |
        # Install AWS CLI
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install --update
        # Set up variables for Fargate deployment
        TASK_FAMILY="fg-ldr-demo-task"
        CLUSTER_NAME="FG-LDR-DEMO"
        SERVICE_NAME="fg-ldr-demo-svc"
        CONTAINER_NAME="strapi-app"
        IMAGE="test-strapi:latest"
        MEMORY=8
        CPU=512
        # Update the task definition with the new Docker image and taskdef json
        TASK_DEF=$( `cat ${{ env.ECS_TASK_DEFINITION }}` | jq 
        '.taskDefinition.taskDefinitionArn' -r)
        echo "TASK_DEF" >> $GITHUB_OUTPUT
        
        # Update the Fargate service with the new task definition
        aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --task-definition $TASK_DEF
        
        # Wait for the service to be stable
        aws ecs wait services-stable --cluster $CLUSTER_NAME --services $SERVICE_NAME
